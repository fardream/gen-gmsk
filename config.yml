package_name: gmsk
enums:
  MSKboundkey_enum:
    go_name: BoundKey
  MSKvariabletype_enum:
    go_name: VariableType
  MSKobjsense_enum:
    go_name: ObjectiveSense
  MSKsoltype_enum:
    go_name: SolType
  MSKstreamtype_enum:
    go_name: StreamType
  MSKdataformat_enum:
    go_name: DataFormat
  MSKcompresstype_enum:
    go_name: CompressType
  MSKuplo_enum:
    go_name: UpLo
  MSKtranspose_enum:
    go_name: Transpose
  MSKonoffkey_enum:
    go_name: OnOff
    integer_type: int32
    is_equal_type: true
    comment: |
      This is alias of int32, because golang distinguishes
      the enum and integers.
  MSKoptimizertype_enum:
    integer_type: int32
    go_name: OptimizerType
    is_equal_type: true
    comment: can be set for the integer parameter [IPAR_OPTIMIZER]
  MSKiparam_enum:
    comment: |
      tells what paramete the integer parameter is set for
      in MSK_putintparam or [Task.PutIntParam].
    go_name: IParam
  MSKdparam_enum:
    go_name: DParam
  MSKiinfitem_enum:
    go_name: IInfItem
  MSKdinfitem_enum:
    go_name: DInfItem
  MSKsolsta_enum:
    go_name: SolSta
  MSKprosta_enum:
    go_name: ProSta
  MSKvalue_enum:
    skip: true
  MSKsimreform_enum:
    go_name: SimReform
  MSKintpnthotstart_enum:
    go_name: IntpntHotstart
  MSKcallbackcode_enum:
    go_name: CallbackCode
  MSKcheckconvexitytype_enum:
    go_name: CheckConvexityType
  MSKconetype_enum:
    go_name: ConeType
  MSKdomaintype_enum:
    go_name: DomainType
  MSKnametype_enum:
    go_name: NameType
  MSKsymmattype_enum:
    go_name: SymmatType
  MSKsolformat_enum:
    go_name: SolFormat
  MSKliinfitem_enum:
    go_name: LIInfItem
  MSKinftype_enum:
    go_name: InfType
  MSKiomode_enum:
    go_name: IoMode
  MSKbranchdir_enum:
    go_name: BranchDir
  MSKmiqcqoreformmethod_enum:
    go_name: MiQcQoReformMethod
  MSKmiodatapermmethod_enum:
    go_name: MioDataPermMethod
  MSKmiocontsoltype_enum:
    go_name: MioContSolType
  MSKmiomode_enum:
    go_name: MioMode
  MSKmionodeseltype_enum:
    go_name: MioNodeSelType
  MSKmpsformat_enum:
    go_name: MPSFormat
  MSKorderingtype_enum:
    go_name: OrderingType
  MSKpresolvemode_enum:
    go_name: PresolveMode
  MSKparametertype_enum:
    go_name: ParameterType
  MSKproblemitem_enum:
    go_name: ProblemItem
  MSKproblemtype_enum:
    go_name: ProblemType
  MSKxmlwriteroutputtype_enum:
    go_name: XmlWriterOutputType
  MSKrescodetype_enum:
    go_name: ResCodeType
  MSKscalingtype_enum:
    go_name: ScalingType
  MSKscalingmethod_enum:
    go_name: ScalingMethod
  MSKsensitivitytype_enum:
    go_name: SensitivityType
  MSKsimseltype_enum:
    go_name: SimSelType
  MSKsolitem_enum:
    go_name: SolItem
  MSKsolveform:
    go_name: SolveForm
  MSKsparam_enum:
    go_name: SParam
    comment: string parameter.
  MSKstakey_enum:
    go_name: StaKey
  MSKstartpointtype_enum:
    go_name: StarPointType
  MSKbasindtype_enum:
    go_name: BasIndType
funcs:
  MSK_makeenv:
    skip: true
  MSK_maketask:
    skip: true
  MSK_asyncgetresult:
    skip: true
  MSK_asyncoptimize:
    skip: true
  MSK_asyncpoll:
    skip: true
  MSK_asyncstop:
    skip: true
  MSK_clonetask:
    skip: true
  MSK_deletetask:
    skip: true
  MSK_freedbgtask:
    skip: true
  MSK_freetask:
    skip: true
  MSK_generateaccnames:
    skip: true
  MSK_generatebarvarnames:
    skip: true
  MSK_generateconenames:
    skip: true
  MSK_generateconnames:
    skip: true
  MSK_generatedjcnames:
    skip: true
  MSK_generatevarnames:
    skip: true
  MSK_getcallbackfunc:
    skip: true
  MSK_getenv:
    skip: true
  MSK_getinfeasiblesubproblem:
    skip: true
  MSK_getnastrparamal:
    skip: true
  MSK_getstrparamal:
    skip: true
  MSK_linkfunctotaskstream:
    skip: true
  MSK_putcallbackfunc:
    skip: true
  MSK_putresponsefunc:
    skip: true
  MSK_readdatacb:
    skip: true
  MSK_writedatahandle:
    skip: true
  MSK_computesparsecholesky:
    skip: true
  MSK_deleteenv:
    skip: true
  MSK_freedbgenv:
    skip: true
  MSK_freeenv:
    skip: true
  MSK_linkfunctoenvstream:
    skip: true
  MSK_makeemptytask:
    skip: true
  MSK_optimizebatch:
    skip: true
  MSK_putexitfunc:
    skip: true
  MSK_callocdbgtask:
    skip: true # calloc, use golang one
  MSK_calloctask:
    skip: true # calloc, use golang one
  MSK_callocdbgenv:
    skip: true # calloc, use golang one
  MSK_callocenv:
    skip: true # calloc, use golang one
  MSK_echoenv:
    skip: true # this is a variadic function
  MSK_echotask:
    skip: true # this is a variadic function
  MSK_axpy:
    comment: performs y = a*x + y where x/y are vectors.
  MSK_gemv:
    comment: calculates y = aAx + by, where A is matrix, x,y is vector, and a b are scalars.
  MSK_dot:
    last_n_param_output: 1
  MSK_getxx:
    skip: true # getting solution x, special handling.
  MSK_getxxslice:
    skip: true # getting solution x slice, special handling.
  MSK_getversion: # 3 outputs as parameters
    last_n_param_output: 3
  MSK_optimizetrm:
    last_n_param_output: 1
    go_name: OptimizeTrm
    comment: |-
      Optimizes the problem.

      Returns:

      - `trmcode` Is either OK or a termination response code.
  MSK_getsolsta:
    last_n_param_output: 1
  MSK_getprosta:
    last_n_param_output: 1
  MSK_appendsparsesymmat:
    last_n_param_output: 1
  MSK_appendsparsesymmatlist:
    last_n_param_output: 1
  MSK_getintinf:
    last_n_param_output: 1
  MSK_getdouinf:
    last_n_param_output: 1
  MSK_getcodedesc:
    last_n_param_output: 2
  MSK_getbuildinfo:
    last_n_param_output: 2
  MSK_getresponseclass:
    last_n_param_output: 1
  MSK_solutiondef:
    last_n_param_output: 1
  MSK_getaccdoty:
    skip: true
  MSK_getaccn:
    skip: true
  MSK_evaluateacc:
    skip: true
  MSK_callbackcodetostr:
    last_n_param_output: 1
  MSK_getcone:
    is_deprecated: true
  MSK_optimizermt:
    last_n_param_output: 1
  MSK_getstrparamlen:
    last_n_param_output: 1
  MSK_getlenbarvarj:
    last_n_param_output: 1
  MSK_expirylicenses:
    last_n_param_output: 1
  MSK_isdouparname:
    last_n_param_output: 1
  MSK_isstrparname:
    last_n_param_output: 1
  MSK_isintparname:
    last_n_param_output: 1
  MSK_getaccdomain:
    last_n_param_output: 1
  MSK_getcj:
    last_n_param_output: 1
  MSK_getcfix:
    last_n_param_output: 1
  MSK_getconnameindex:
    last_n_param_output: 1
  MSK_getdimbarvarj:
    last_n_param_output: 1
  MSK_getdjcnumafe:
    last_n_param_output: 1
  MSK_getdjcnumafetot:
    last_n_param_output: 1
  MSK_getdjcnumdomain:
    last_n_param_output: 1
  MSK_getdjcnumdomaintot:
    last_n_param_output: 1
  MSK_getdjcnumterm:
    last_n_param_output: 1
  MSK_getdjcnumtermtot:
    last_n_param_output: 1
  MSK_getdomainn:
    last_n_param_output: 1
  MSK_getdomaintype:
    last_n_param_output: 1
  MSK_getprimalobj:
    last_n_param_output: 1
  MSK_getdualobj:
    last_n_param_output: 1
  MSK_getdouparam:
    last_n_param_output: 1
  MSK_getinfindex:
    last_n_param_output: 1
  MSK_getinfmax:
    last_n_param_output: 1
  MSK_getintparam:
    last_n_param_output: 1
  MSK_getlintinf:
    last_n_param_output: 1
  MSK_getnadouparam:
    last_n_param_output: 1
  MSK_getnaintinf:
    last_n_param_output: 1
  MSK_getnaintparam:
    last_n_param_output: 1
  MSK_getnastrparam:
    last_n_param_output: 2
  MSK_getobjsense:
    last_n_param_output: 1
  MSK_getparammax:
    last_n_param_output: 1
  MSK_getprobtype:
    last_n_param_output: 1
  MSK_getvartype:
    last_n_param_output: 1
  MSK_getvarnameindex:
    last_n_param_output: 1
